name: Build, Test, and Generate Code Coverage

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: cpvc.sln

jobs:
  build:
    name: Build debug
    runs-on: windows-latest

    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Create dummy ROMs
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        fsutil file createnew roms\os6128.rom 16384
        fsutil file createnew roms\amsdos6128.rom 16384
        fsutil file createnew roms\basic6128.rom 16384

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build debug
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /t:Rebuild /p:Configuration=Debug /p:Platform="x64" ${{env.SOLUTION_FILE_PATH}}

    - name: Build release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /t:Rebuild /p:Configuration=Release /p:Platform="x64" ${{env.SOLUTION_FILE_PATH}}

    - name: Upload test binaries
      uses: actions/upload-artifact@v2
      with:
        name: cpvc-test-debug
        path: cpvc-test\bin\x64\Debug\

    - name: Upload test binaries
      uses: actions/upload-artifact@v2
      with:
        name: cpvc-test-release
        path: cpvc-test\bin\x64\Release\

  test:
    name: Test
    needs: build
    runs-on: windows-latest

    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Download test binaries
      uses: actions/download-artifact@v2
      with:
        name: cpvc-test-release
        path: bin

    - name: Install NUnit
      run: nuget install NUnit.ConsoleRunner -Version 3.11.1

    - name: Run unit tests
      run: ".\\NUnit.ConsoleRunner.3.11.1\\tools\\nunit3-console.exe bin\\cpvc-test.dll"

  coverage:
    name: Code coverage
    needs: build
    runs-on: windows-latest

    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Download test binaries
      uses: actions/download-artifact@v2
      with:
        name: cpvc-test-debug
        path: bin

    - name: Install OpenCover
      run: nuget install OpenCover -Version 4.7.922

    - name: Install NUnit
      run: nuget install NUnit.ConsoleRunner -Version 3.11.1

    - name: Install ReportGenerator
      run: nuget install ReportGenerator -Version 4.3.6

    - name: Install Codecov reporter
      run: nuget install Codecov -Version 1.12.0

    - name: Generate code coverage
      run: |
        &".\\OpenCover.4.7.922\\tools\\OpenCover.Console.exe" -target:".\\NUnit.ConsoleRunner.3.11.1\\tools\\nunit3-console.exe" -targetargs:"bin\\cpvc-test.dll" -hideskipped:All -register:user -output:cpvc-coverage.xml -filter:"+[cpvc]* +[cpvc-core-clr]* -[cpvc-test]*" -excludebyfile:"d:\\agent\\*";"c:\\program files*";"*App.g.cs";"*.xaml.cs";"*\\obj\\*";"*.xaml";"*.Designer.cs";"*Socket.cs"

    - name: Process code coverage
      run: .\ReportGenerator.4.3.6\tools\net47\ReportGenerator.exe -targetdir:. -reporttypes:Cobertura -sourcedirs:. -reports:cpvc-coverage.xml

    - name: Upload code coverage report
      run: .\Codecov.1.12.0\tools\win7-x86\codecov.exe --branch ${{github.ref_name}} --build ${{github.run_number}} --sha ${{github.sha}} --file "Cobertura.xml" --token ${{secrets.CPVC_CODECOV_TOKEN}}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage
        path: |
          cpvc-coverage.xml
          Cobertura.xml
