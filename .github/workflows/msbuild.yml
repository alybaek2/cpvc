name: Build, Test, and Coverage

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: cpvc.sln

jobs:
  builddebug:
    name: Build debug
    runs-on: windows-2019

    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Create dummy ROMs
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        fsutil file createnew roms\os6128.rom 16384
        fsutil file createnew roms\amsdos6128.rom 16384
        fsutil file createnew roms\basic6128.rom 16384

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build debug
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /t:Rebuild /p:Configuration=Debug /p:Platform="x64" ${{env.SOLUTION_FILE_PATH}}

    - name: Upload test binaries
      uses: actions/upload-artifact@v2
      with:
        name: cpvc-test-debug
        path: cpvc-test\bin\x64\Debug\

  buildrelease:
    name: Build release
    runs-on: windows-latest

    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Create dummy ROMs
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        fsutil file createnew roms\os6128.rom 16384
        fsutil file createnew roms\amsdos6128.rom 16384
        fsutil file createnew roms\basic6128.rom 16384

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /t:Rebuild /p:Configuration=Release /p:Platform="x64" ${{env.SOLUTION_FILE_PATH}}

    - name: Upload test binaries
      uses: actions/upload-artifact@v2
      with:
        name: cpvc-test-release
        path: cpvc-test\bin\x64\Release\

  test:
    name: Test
    needs: buildrelease
    runs-on: windows-latest

    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Download test binaries
      uses: actions/download-artifact@v2
      with:
        name: cpvc-test-release
        path: bin

    - name: Install NUnit
      run: nuget install NUnit.ConsoleRunner -Version 3.11.1

    - name: Fetch transform code
      run: |
        curl https://raw.githubusercontent.com/nunit/nunit-transforms/master/nunit3-junit/nunit3-junit.xslt --output nunit-junit.xslt

    - name: Run unit tests
      run: .\\NUnit.ConsoleRunner.3.11.1\\tools\\nunit3-console.exe bin\\cpvc-test.dll --result cpvc-test.xml --result "cpvc-test-junit.xml;transform=nunit3-junit.xslt"

    - name: Annotate job with results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      if: always()
      with:
        files: cpvc-test-junit.xml
 
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: cpvc-test
        path: cpvc-test.xml

  coverage:
    name: Code coverage
    needs: builddebug
    runs-on: windows-latest

    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Download test binaries
      uses: actions/download-artifact@v2
      with:
        name: cpvc-test-debug
        path: bin

    - name: Install OpenCover
      run: nuget install OpenCover -Version 4.7.1221

    - name: Install NUnit
      run: nuget install NUnit.ConsoleRunner -Version 3.11.1

    - name: Install ReportGenerator
      run: nuget install ReportGenerator -Version 4.3.6

    - name: Install Codecov reporter
      run: nuget install Codecov -Version 1.12.0

    - name: Generate code coverage
      run: .\OpenCover.4.7.1221\tools\OpenCover.Console.exe -target:".\NUnit.ConsoleRunner.3.11.1\tools\nunit3-console.exe" -targetargs:bin\cpvc-test.dll -filter:"+[cpvc]* +[cpvc-core-clr]* -[cpvc-test]*" -excludebyfile:"d:\agent\*;c:\program files*;*App.g.cs;*.xaml.cs;*\obj\*;*.xaml;*.Designer.cs;*Socket.cs;*HistoryViewItem.cs" -hideskipped:All -register:Path64 -output:cpvc-coverage.xml

    - name: Process code coverage
      run: .\ReportGenerator.4.3.6\tools\net47\ReportGenerator.exe -targetdir:. -reporttypes:Cobertura -sourcedirs:. -reports:cpvc-coverage.xml

    - name: Upload code coverage report
      run: .\Codecov.1.12.0\tools\win7-x86\codecov.exe --branch ${{github.ref_name}} --build ${{github.run_number}} --sha ${{github.sha}} --file "Cobertura.xml" --token ${{secrets.CPVC_CODECOV_TOKEN}}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage
        path: |
          cpvc-coverage.xml
          Cobertura.xml
